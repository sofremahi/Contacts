Set the remote URL:

bash
Copy code
git remote set-url origin https://github.com/sofremahi/Contacts.git
Verify the remote URL:

bash
Copy code
git remote -v
Switch to the master branch:

bash
Copy code
git checkout master
Add and commit changes:

bash
Copy code
git add .
git commit -m "message"
Push changes to the master branch:

bash
Copy code
git push -u origin master
Note
If the master branch does not exist in your local repository, you might need to create it or pull it from the remote first:
bash
Copy code
git fetch origin
git checkout -b master origin/master
 another way :

git fetch origin
2. Review the Changes:
After fetching, you can see what changes exist on the remote branch compared to your local branch:

sh
Copy code
git log origin/master --not HEAD
This command shows you the commits that are on the remote branch but not on your local branch.

3. Merge the Changes:
If you want to incorporate the remote changes into your local branch, you can use:

sh
Copy code
git pull origin master
This will merge the changes from the remote master branch into your local master branch.

If there are no conflicts, the merge will succeed, and you can proceed to push your changes.
If there are conflicts, Git will prompt you to resolve them manually. After resolving the conflicts, commit the changes:
sh
Copy code
git commit -m "Resolved merge conflicts"
4. Push Your Changes:
After successfully merging, you can push your changes to the remote repository:

sh
Copy code
git push origin master
Alternative (Force Push):
If you're certain that you want to overwrite the remote branch with your local changes and you don't care about the remote changes, you can force push (be cautious with this approach, as it can overwrite work done by others):

sh
Copy code
git push origin master --force

